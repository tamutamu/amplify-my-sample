import { Amplify, API, Auth, withSSRContext } from "aws-amplify";
import { GRAPHQL_AUTH_MODE } from "@aws-amplify/api-graphql";
import "@aws-amplify/ui-react/styles.css";
import awsExports from "../src/aws-exports";
import type { GetServerSideProps } from "next";
import Head from "next/head";
import Image from "next/image";
import React, { useState } from "react";
import styles from "../styles/Home.module.css";
import { listPosts } from "../src/graphql/queries";
import { createPost, deletePost } from "../src/graphql/mutations";
import { CreatePostMutation } from "../src/API";
import { Authenticator } from "@aws-amplify/ui-react";

Amplify.configure({ ...awsExports, ssr: false });

interface Post {
  id: string;
  message: string;
}

export const getServerSideProps: GetServerSideProps = async ({ req }) => {
  const SSR = withSSRContext({ req });
  const response = await SSR.API.graphql({ query: listPosts });

  return {
    props: {
      _posts: response.data.listPosts.items,
    },
  };
};

const Home = ({ _posts = [] }: { _posts: Post[] }) => {
  const [posts, setPosts] = useState(_posts);

  const handleCreatePost = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();

    const form = new FormData(event.currentTarget);

    try {
      const result = await API.graphql({
        authMode: GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS,
        query: createPost,
        variables: {
          input: {
            message: form.get("message"),
          },
        },
      });
      if ("data" in result && result.data) {
        const data = result.data.createPost;
        console.log(data);
        setPosts([...posts, data]);
        console.log(posts);
        //   window.location.href = `/posts/${data.createPost!.id}`;
      }
    } catch (e) {
      console.error(e);

      if (e instanceof Error) {
        throw new Error(e.message);
      }
    }
  };

  const allDelete = async () => {
    for (const pp of posts) {
      const result = await API.graphql({
        authMode: GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS,
        query: deletePost,
        variables: {
          input: {
            id: pp.id,
            _version: 1,
          },
        },
      });
    }

    setPosts([]);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Amplify + Next.js</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Authenticator>
        <main className={styles.main}>
          <p className={styles.description}>
            <code className={styles.code}>{posts.length}</code>
            posts
          </p>

          <div className={styles.card}>
            <form onSubmit={handleCreatePost}>
              <fieldset>
                <legend>メッセージ</legend>
                <textarea defaultValue="" name="message" />
              </fieldset>

              <button>投稿する</button>
            </form>
            <button onClick={() => Auth.signOut()}>Sign out</button>
            <button onClick={() => allDelete()}>削除する</button>
          </div>

          <div>
            {posts.map((post) => (
              <span
                // href={`/posts/${post.id}`}
                key={post.id}
              >
                <p>{post.message}</p>
              </span>
            ))}
          </div>
        </main>
      </Authenticator>
    </div>
  );
};

export default Home;
